# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-08-12 08:32
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Eqjob',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('init_temp', models.FloatField()),
                ('ref_temp', models.FloatField(blank=True)),
                ('nstlim1', models.IntegerField()),
                ('nstlim2', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Mdjob',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('md_serial', models.IntegerField()),
                ('ntb', models.IntegerField()),
                ('dt', models.FloatField()),
                ('nstlim', models.IntegerField()),
                ('pressure', models.FloatField()),
                ('sim_begin_time', models.FloatField()),
                ('sim_end_time', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Minjob',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('maxcyc1', models.IntegerField()),
                ('ncyc1', models.IntegerField()),
                ('maxcyc2', models.IntegerField()),
                ('ncyc2', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Ptrajjob',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ptraj_serial', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Work',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=20)),
                ('nres', models.IntegerField()),
                ('sodium_added', models.BooleanField(default=False)),
                ('chloride_added', models.BooleanField(default=False)),
                ('buffer_size', models.FloatField()),
                ('solvent_model', models.CharField(max_length=15)),
                ('work_dir', models.CharField(blank=True, max_length=200)),
                ('leap_prep_status', models.IntegerField()),
                ('leap_status', models.IntegerField()),
                ('min_prep_status', models.IntegerField(choices=[('NO DATA', 'NO DATA'), ('DONE', 'DONE'), ('WAIT', 'WAIT'), ('ERROR', 'ERROR')], default=0)),
                ('min_run_status', models.IntegerField(choices=[('NO DATA', 'NO DATA'), ('DONE', 'DONE'), ('WAIT', 'WAIT'), ('ERROR', 'ERROR')], default=0)),
                ('eq_prep_status', models.IntegerField(choices=[('NO DATA', 'NO DATA'), ('DONE', 'DONE'), ('WAIT', 'WAIT'), ('ERROR', 'ERROR')], default=0)),
                ('eq_run_status', models.IntegerField(choices=[('NO DATA', 'NO DATA'), ('DONE', 'DONE'), ('WAIT', 'WAIT'), ('ERROR', 'ERROR')], default=0)),
                ('md_prep_status', models.IntegerField(choices=[('NO DATA', 'NO DATA'), ('DONE', 'DONE'), ('WAIT', 'WAIT'), ('ERROR', 'ERROR')], default=0)),
                ('md_run_status', models.IntegerField(choices=[('NO DATA', 'NO DATA'), ('DONE', 'DONE'), ('WAIT', 'WAIT'), ('ERROR', 'ERROR')], default=0)),
                ('ptraj_prep_status', models.IntegerField(choices=[('NO DATA', 'NO DATA'), ('DONE', 'DONE'), ('WAIT', 'WAIT'), ('ERROR', 'ERROR')], default=0)),
                ('ptraj_run_status', models.IntegerField(choices=[('NO DATA', 'NO DATA'), ('DONE', 'DONE'), ('WAIT', 'WAIT'), ('ERROR', 'ERROR')], default=0)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='works', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='ptrajjob',
            name='work',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ptrajjobs', to='webmd.Work'),
        ),
        migrations.AddField(
            model_name='minjob',
            name='work',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='minjobs', to='webmd.Work'),
        ),
        migrations.AddField(
            model_name='mdjob',
            name='work',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mdjobs', to='webmd.Work'),
        ),
        migrations.AddField(
            model_name='eqjob',
            name='work',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='eqjobs', to='webmd.Work'),
        ),
    ]
